<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>相惜恨离</title>
    <link>https://xiangxihenli.github.io/</link>
    <description>Recent content on 相惜恨离</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 03 Apr 2020 22:19:13 +0800</lastBuildDate>
    
	<atom:link href="https://xiangxihenli.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>深入MySQL基础学习01--存储</title>
      <link>https://xiangxihenli.github.io/post/mysql-basic01/</link>
      <pubDate>Fri, 03 Apr 2020 22:19:13 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/post/mysql-basic01/</guid>
      <description>简介 接下来想学习一下MySQL相关的一些基础知识。主要涉及MySQL的存储、索引、事务和锁相关的知识。 用了很久的MySQL，对于MySQL的知识还是始于应用，终于应用。而且只是知道一个大概。 接下来这个系列，我想好好稍微深入的了解MySQL的一些基础知识，为以后深入学习数据库的原理</description>
    </item>
    
    <item>
      <title>PHP基础知识学习(04)--Array</title>
      <link>https://xiangxihenli.github.io/post/php-basic04/</link>
      <pubDate>Thu, 02 Apr 2020 16:07:19 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/post/php-basic04/</guid>
      <description>数组 数组是PHP中非常强大、灵活的一种数据类型，它的底层实现为散列表(HashTable，也称作：哈希表)， 除了我们熟悉的PHP用户空间的Array类型之外，内核中也随处用到散列表，比如函数、类、常量、已include文件的索引表、 全局符号表等都用的HashTable存储。 散列表</description>
    </item>
    
    <item>
      <title>PHP基础知识学习(03)--变量</title>
      <link>https://xiangxihenli.github.io/post/php-basic03/</link>
      <pubDate>Thu, 02 Apr 2020 09:32:12 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/post/php-basic03/</guid>
      <description>变量 大多数编程语言都有变量，变量通常有三个属性，变量名、变量值、变量类型。PHP是一种弱类型语言，变量可以在实际处理过程中进行隐式的转换。这一特性让开发变得十分便利。 在官方的PHP实现内部，所有变量使用同一种结构zval来保存，这个结构能表示PHP中的各种数据类型。 不仅包含变量的</description>
    </item>
    
    <item>
      <title>Apache三种工作模式</title>
      <link>https://xiangxihenli.github.io/post/http-server-apache-work-mode/</link>
      <pubDate>Wed, 01 Apr 2020 12:57:01 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/post/http-server-apache-work-mode/</guid>
      <description>摘要 Apache中主要有三种多进程的工作模式，分别是prefork，Worker，Event。 具体运行哪种模式，可以到Apache的配置文件中查询。 Prefork MPM Prefork MPM实现了一个非线程的、预派生的web服务器。它在Apache启动之初，就先预派生一些子进程，然后等待连接；可以减少频繁创建</description>
    </item>
    
    <item>
      <title>PHP基础知识学习(02)--SAPI</title>
      <link>https://xiangxihenli.github.io/post/php-basic02/</link>
      <pubDate>Wed, 01 Apr 2020 12:57:01 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/post/php-basic02/</guid>
      <description>摘要 在了解了PHP的生命周期后，再来详细了解一下SAPI是如何工作的。接下来从PHP主要的几个应用场景下去了解SAPI。 比如Apache，CLI，CGI，FastCGI，FPM。 说实话这几个概念之前可是困扰了我很久。 Apache Apache是一个开源的Web服务器。可以支持多种特性，大多通</description>
    </item>
    
    <item>
      <title>PHP基础知识学习(01)--生命周期</title>
      <link>https://xiangxihenli.github.io/post/php-basic01/</link>
      <pubDate>Tue, 31 Mar 2020 19:05:23 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/post/php-basic01/</guid>
      <description>PHP架构 PHP架构图： SAPI Server Application Programing Interface，PHP与外部应用交换接口。 常见有给Apache的mod_php5，mode_php7，CGI，IIS的ISAPI，还有Shell的CLI。 Zend Engine PHP的核心部分，包括编译器和执行器两部分。负责编译PHP语法为字节码，执行字节码。 P</description>
    </item>
    
    <item>
      <title>使用Hugo&#43;GitHub Pages 搭建个人博客</title>
      <link>https://xiangxihenli.github.io/tutorial/how-to-create-you-own-blog/</link>
      <pubDate>Thu, 27 Feb 2020 23:51:05 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/tutorial/how-to-create-you-own-blog/</guid>
      <description>Hugo是什么 Hugo是一个静态站点生成工具。可以根据Markdown文件生成静态站点文件。 同类型的产品还有Hexo、JEKYLL、Next.js等。 下载安装Hugo Windows可根据官网教程，到Hugo release中下载最新的可执行文件。 下载解压后，将解压路径添加进环境变量</description>
    </item>
    
    <item>
      <title>博客开通啦！</title>
      <link>https://xiangxihenli.github.io/post/my-first-post/</link>
      <pubDate>Thu, 27 Feb 2020 20:32:24 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/post/my-first-post/</guid>
      <description>很早之前就想搭建自己的个人blog，因为工作业务原因，没有把时间安排在个人成长这些事情上面。 但是，经历了入行的这三年，越发的觉得技术实力的成长是离不开思考、实践和总结的。 所以，现在新建立起我的个人blog。 blog使用的比较简单的实现 Hugo + GitHub Pages. 未来打算自己学习过程中总结性的内容和一</description>
    </item>
    
    <item>
      <title>如何在Ubuntu中搭建网络代理服务</title>
      <link>https://xiangxihenli.github.io/tutorial/how-to-create-proxy-server-on-ubuntu/</link>
      <pubDate>Tue, 19 Jun 2018 16:39:18 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/tutorial/how-to-create-proxy-server-on-ubuntu/</guid>
      <description>原因 最近用爬虫爬一些网站，发现有时候网络不太稳定，换个网络环境之后，就可以爬取到结果。 所以就有了使用代理去请求的想法了。 网上提供的免费代理招了几家不太好用，付费代理倒是还行。 本着能动手解决就不花钱的精神(穷)，所以就有了构建代理的想法。所以最后选择了在服务器搭建代理。 如何搭建 查阅</description>
    </item>
    
    <item>
      <title>从零开始布置你的个人网站（四）</title>
      <link>https://xiangxihenli.github.io/tutorial/create-your-own-website04/</link>
      <pubDate>Sun, 16 Jul 2017 15:57:06 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/tutorial/create-your-own-website04/</guid>
      <description>为了让我们的网站更加安全，防止运营商注入广告，防止用户信息外泄，https已经逐渐变得大众化。 虽然有些ssl证书提供商需要收费，他们往往都是面对多个域名的情况下，如果只是单个域名，使用免费的let&amp;rsquo;s Encrypt也能将我们网站支持https。 生成SSL证书 1、 下载安</description>
    </item>
    
    <item>
      <title>从零开始布置你的个人网站（三）</title>
      <link>https://xiangxihenli.github.io/tutorial/create-your-own-website03/</link>
      <pubDate>Sat, 15 Jul 2017 15:57:06 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/tutorial/create-your-own-website03/</guid>
      <description>线上部署项目 安装完成Laravel后，我们就下来就尝试如何把线上的代码，下载到服务器中。 我们在部署项目的时候，通常都是把代码先放到git，coding，svn或者其他托管服务中，然后在从服务器下将代码下载下来。 Git 发布项目 利用git来发布项目，首先我们需要下载安装git 的官方工具，</description>
    </item>
    
    <item>
      <title>从零开始布置你的个人网站（二）</title>
      <link>https://xiangxihenli.github.io/tutorial/create-your-own-website02/</link>
      <pubDate>Fri, 14 Jul 2017 15:57:06 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/tutorial/create-your-own-website02/</guid>
      <description>部署Laravel环境 部署完基本LAMP环境之后，因为我的项目中会使用到Laravel，所以接下来继续搭建Laravel环境。 首先要使用Laravel最好先安装composer。 安装composer ubuntu中安装composer 可以下面两个命令来执行 命令一: curl -sS https://getcomposer.org/installer | php 命令二:</description>
    </item>
    
    <item>
      <title>从零开始布置你的个人网站（一）</title>
      <link>https://xiangxihenli.github.io/tutorial/create-your-own-website01/</link>
      <pubDate>Thu, 13 Jul 2017 15:57:06 +0800</pubDate>
      
      <guid>https://xiangxihenli.github.io/tutorial/create-your-own-website01/</guid>
      <description>服务器准备 之前用腾讯云购买了一个1元服务器，但是一直没有用起来，最近项目不太忙，准备自己搭建一个线上环境。 安装ubuntu环境 ####安装ubuntu环境 安装ubuntu的16.04.1的32环境 登录ubuntu系统，可以直接使用腾讯云的登录，也可以通过各种ssh工具登录。 在Ub</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://xiangxihenli.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xiangxihenli.github.io/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>https://xiangxihenli.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xiangxihenli.github.io/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>